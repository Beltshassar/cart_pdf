<?php

namespace Extcode\CartPdf\Domain\Finisher\Order;

class DocumentFinisher extends \Extcode\Cart\Domain\Finisher\AbstractFinisher
{
    /**
     * @var \Extcode\Cart\Domain\Repository\Order\ItemRepository
     */
    protected $orderItemRepository;

    /**
     * @var \Extcode\Cart\Utility\OrderUtility
     */
    protected $orderUtility;

    /**
     * @param \Extcode\Cart\Domain\Repository\Order\ItemRepository $orderItemRepository
     */
    public function injectOrderItemRepository(
        \Extcode\Cart\Domain\Repository\Order\ItemRepository $orderItemRepository
    ) {
        $this->orderItemRepository = $orderItemRepository;
    }

    /**
     * @param \Extcode\Cart\Utility\OrderUtility $orderUtility
     */
    public function injectOrderUtility(
        \Extcode\Cart\Utility\OrderUtility $orderUtility
    ) {
        $this->orderUtility = $orderUtility;
    }

    public function executeInternal()
    {
        $orderItem = $this->finisherContext->getOrderItem();

        if ($this->settings['autoGenerateDocuments']) {
            foreach ($this->settings['autoGenerateDocuments'] as $documentType => $documentData) {
                $getterForNumber = 'get' . ucfirst($documentType) . 'Number';
                $setterForNumber = 'set' . ucfirst($documentType) . 'Number';
                $setterForDate = 'set' . ucfirst($documentType) . 'Date';

                if (!$orderItem->$getterForNumber()) {
                    $documentNumber = $this->orderUtility->getNumber($this->settings, $documentType);

                    $orderItem->$setterForNumber($documentNumber);
                    $orderItem->$setterForDate(new \DateTime());
                }

                $this->generatePdfDocument($orderItem, $documentType);
            }

            $this->orderItemRepository->update($orderItem);
            $this->persistenceManager->persistAll();

            $this->finisherContext->setOrderItem($orderItem);
        }
    }

    /**
     * @param \Extcode\Cart\Domain\Model\Order\Item $orderItem
     * @param string $pdfType
     */
    protected function generatePdfDocument(\Extcode\Cart\Domain\Model\Order\Item $orderItem, $pdfType)
    {
        $pdfService = $this->objectManager->get(
            \Extcode\CartPdf\Service\PdfService::class
        );

        $pdfService->createPdf($orderItem, $pdfType);
    }
}
